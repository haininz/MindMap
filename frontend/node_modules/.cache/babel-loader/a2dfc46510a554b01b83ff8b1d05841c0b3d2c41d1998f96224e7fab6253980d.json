{"ast":null,"code":"var _jsxFileName = \"/Users/hainingzhou/VSCodeProjects/DrLambdaProj/frontend/src/MindMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { DataSet, Network } from 'vis-network/standalone/esm/vis-network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MindMap = () => {\n  _s();\n  const domNode = useRef(null);\n  useEffect(() => {\n    // Nodes and edges data\n    const nodes = new DataSet([{\n      id: 1,\n      label: 'Main Topic',\n      color: '#f0a30a',\n      shape: 'ellipse'\n    }, {\n      id: 2,\n      label: 'Subtopic 1',\n      color: '#7cbb00',\n      shape: 'box'\n    }, {\n      id: 3,\n      label: 'Subtopic 2',\n      color: '#00aba9',\n      shape: 'box'\n    }, {\n      id: 4,\n      label: 'Subtopic 3',\n      color: '#ff0097',\n      shape: 'box'\n    }]);\n    const edges = new DataSet([{\n      from: 1,\n      to: 2,\n      arrows: 'to'\n    }, {\n      from: 1,\n      to: 3,\n      arrows: 'to'\n    }, {\n      from: 1,\n      to: 4,\n      arrows: 'to'\n    }]);\n\n    // Configuration for the Network\n    const options = {\n      nodes: {\n        borderWidth: 2,\n        size: 30,\n        color: {\n          border: '#406897',\n          background: '#6AAFFF'\n        },\n        font: {\n          color: '#eeeeee'\n        }\n      },\n      edges: {\n        color: 'lightgray',\n        smooth: true\n      },\n      layout: {\n        hierarchical: {\n          direction: \"UD\",\n          sortMethod: \"directed\"\n        }\n      },\n      interaction: {\n        hover: true\n      }\n    };\n\n    // Initialize network\n    const network = new Network(domNode.current, {\n      nodes,\n      edges\n    }, options);\n    return () => {\n      network.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: domNode,\n    style: {\n      height: '500px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s(MindMap, \"oMeNP8Y0LBP7p8Tz/f0Pw3T8oxI=\");\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","useEffect","useRef","DataSet","Network","jsxDEV","_jsxDEV","MindMap","_s","domNode","nodes","id","label","color","shape","edges","from","to","arrows","options","borderWidth","size","border","background","font","smooth","layout","hierarchical","direction","sortMethod","interaction","hover","network","current","destroy","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hainingzhou/VSCodeProjects/DrLambdaProj/frontend/src/MindMap.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { DataSet, Network } from 'vis-network/standalone/esm/vis-network';\n\nconst MindMap = () => {\n    const domNode = useRef(null);\n\n    useEffect(() => {\n        // Nodes and edges data\n        const nodes = new DataSet([\n            { id: 1, label: 'Main Topic', color: '#f0a30a', shape: 'ellipse' },\n            { id: 2, label: 'Subtopic 1', color: '#7cbb00', shape: 'box' },\n            { id: 3, label: 'Subtopic 2', color: '#00aba9', shape: 'box' },\n            { id: 4, label: 'Subtopic 3', color: '#ff0097', shape: 'box' }\n        ]);\n\n        const edges = new DataSet([\n            { from: 1, to: 2, arrows: 'to' },\n            { from: 1, to: 3, arrows: 'to' },\n            { from: 1, to: 4, arrows: 'to' }\n        ]);\n\n        // Configuration for the Network\n        const options = {\n            nodes: {\n                borderWidth: 2,\n                size: 30,\n                color: {\n                    border: '#406897',\n                    background: '#6AAFFF'\n                },\n                font: { color: '#eeeeee' }\n            },\n            edges: {\n                color: 'lightgray',\n                smooth: true\n            },\n            layout: {\n                hierarchical: {\n                    direction: \"UD\",\n                    sortMethod: \"directed\"\n                }\n            },\n            interaction: { hover: true }\n        };\n\n        // Initialize network\n        const network = new Network(domNode.current, { nodes, edges }, options);\n\n        return () => {\n            network.destroy();\n        };\n    }, []);\n\n    return <div ref={domNode} style={{ height: '500px', width: '100%' }} />;\n};\n\nexport default MindMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,OAAO,EAAEC,OAAO,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,OAAO,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,KAAK,GAAG,IAAIP,OAAO,CAAC,CACtB;MAAEQ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAU,CAAC,EAClE;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAM,CAAC,EAC9D;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAM,CAAC,EAC9D;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAM,CAAC,CACjE,CAAC;IAEF,MAAMC,KAAK,GAAG,IAAIZ,OAAO,CAAC,CACtB;MAAEa,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK,CAAC,EAChC;MAAEF,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK,CAAC,EAChC;MAAEF,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK,CAAC,CACnC,CAAC;;IAEF;IACA,MAAMC,OAAO,GAAG;MACZT,KAAK,EAAE;QACHU,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,EAAE;QACRR,KAAK,EAAE;UACHS,MAAM,EAAE,SAAS;UACjBC,UAAU,EAAE;QAChB,CAAC;QACDC,IAAI,EAAE;UAAEX,KAAK,EAAE;QAAU;MAC7B,CAAC;MACDE,KAAK,EAAE;QACHF,KAAK,EAAE,WAAW;QAClBY,MAAM,EAAE;MACZ,CAAC;MACDC,MAAM,EAAE;QACJC,YAAY,EAAE;UACVC,SAAS,EAAE,IAAI;UACfC,UAAU,EAAE;QAChB;MACJ,CAAC;MACDC,WAAW,EAAE;QAAEC,KAAK,EAAE;MAAK;IAC/B,CAAC;;IAED;IACA,MAAMC,OAAO,GAAG,IAAI5B,OAAO,CAACK,OAAO,CAACwB,OAAO,EAAE;MAAEvB,KAAK;MAAEK;IAAM,CAAC,EAAEI,OAAO,CAAC;IAEvE,OAAO,MAAM;MACTa,OAAO,CAACE,OAAO,CAAC,CAAC;IACrB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO5B,OAAA;IAAK6B,GAAG,EAAE1B,OAAQ;IAAC2B,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAAClC,EAAA,CAnDID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}